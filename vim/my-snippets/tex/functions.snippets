###########################################
# LaTeX FUNCTION SNIPPETS BY approx-error #
###########################################

# Defining a helper function to only make these work inside latex math mode:

global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'
endglobal

# Now adding 'context "math()"' above a snippet will only make it work inside math mode


#############
# Functions #
#############

# Trig functions

context "math()"
snippet "([^a])sin" "Sine function" ri
`!p snip.rv = match.group(1)`\\sin$0
endsnippet

context "math()"
snippet "([^a])cos" "Cosine function" ri
`!p snip.rv = match.group(1)`\\cos$0
endsnippet

context "math()"
snippet "([^a])tan" "Tangent function" ri
`!p snip.rv = match.group(1)`\\tan$0
endsnippet

context "math()"
snippet "([^a])sec" "Secant function" ri
`!p snip.rv = match.group(1)`\\sec$0
endsnippet

context "math()"
snippet "([^a])csc" "Cosecant function" ri
`!p snip.rv = match.group(1)`\\csc$0
endsnippet

context "math()"
snippet "([^a])cot" "Cotangent function" ri
`!p snip.rv = match.group(1)`\\cot$0
endsnippet

# Inverse trig functions

context "math()"
snippet asin "Arcsine function" i
\\arcsin$0
endsnippet

context "math()"
snippet acos "Arccosine function" i
\\arccos$0
endsnippet

context "math()"
snippet atan "Arctangent function" i
\\arctan$0
endsnippet

context "math()"
snippet asec "Arcsecant function" i
\\arcsec$0
endsnippet

context "math()"
snippet acsc "Arccosecant function" i
\\arccsc$0
endsnippet

context "math()"
snippet acot "Arccotangent function" i
\\arccot$0
endsnippet

# Hyperbolic functions

context "math()"
snippet "([^a])sinh" "Hyperbolic sine function" ri
`!p snip.rv = match.group(1)`\\sinh$0
endsnippet

context "math()"
snippet "([^a])cosh" "Hyperbolic cosine function" ri
`!p snip.rv = match.group(1)`\\cosh$0
endsnippet

context "math()"
snippet "([^a])tanh" "Hyperbolic tangent function" ri
`!p snip.rv = match.group(1)`\\tanh$0
endsnippet

context "math()"
snippet "([^a]sech)" "Hyperbolic secant function" ri
`!p snip.rv = match.group(1)`\\sech$0
endsnippet

context "math()"
snippet "([^a]csch)" "Hyperbolic cosecant function" ri
`!p snip.rv = match.group(1)`\\csch$0
endsnippet

context "math()"
snippet "([^a])coth" "Hyperbolic cotangent function" ri
`!p snip.rv = match.group(1)`\\coth$0
endsnippet

# Inverse hyperbolic functions

context "math()"
snippet asinh "Area sinh function" i
\\arsinh$0
endsnippet

context "math()"
snippet acosh "Area cosh function" i
\\arcosh$0
endsnippet

context "math()"
snippet atanh "Area tanh function" i
\\artanh$0
endsnippet

context "math()"
snippet asech "Area sech function" i
\\arsech$0
endsnippet

context "math()"
snippet acsch "Area csch function" i
\\arcsch$0
endsnippet

context "math()"
snippet acoth "Area coth function" i
\\arcoth$0
endsnippet

# Exponential functions

context "math()"
snippet exp "Exponential" i
\\exp$0
endsnippet

context "math()"
snippet eul "Euler's number to some power" i
e^{$1}$0
endsnippet

context "math()"
snippet 2p "Base 2 exponential" i
2^{$1}$0
endsnippet

context "math()"
snippet erf "Error function" i
\\erf$0
endsnippet

# Logarithmic functions

context "math()"
snippet ln "Natural logarithm" i
\\ln$0
endsnippet

context "math()"
snippet log "Logarithm" i
\\log_{${1:10}}$0
endsnippet

# Complex analysis

context "math()"
snippet res "Residue" i
\\res$0
endsnippet

context "math()"
snippet wind "Winding number" i
\\wind$0
endsnippet

context "math()"
snippet re "Real part" i
\\re$0
endsnippet

context "math()"
snippet "([^s])im" "Imaginary part" ri
`!p snip.rv = match.group(1)`\\im$0
endsnippet

context "math()"
snippet arg "Complex argument" i
\\arg$0
endsnippet

context "math()"
snippet Arg "Principal value argument" i
\\Arg$0
endsnippet

context "math()"
snippet Ln "Principal value logarithm" i
\\Ln$0
endsnippet

context "math()"
snippet pv "Cauchy principal value" i
\\pv$0
endsnippet

# Other math

context "math()"
snippet ord "Order of a function (Big O notation)" i
\\mathcal{O}($1)$0
endsnippet

context "math()"
snippet max "Maximum function" i
\\max$0
endsnippet

context "math()"
snippet min "Minimum function" i
\\min$0
endsnippet

context "math()"
snippet sup "Supremum" i
\\sup$0
endsnippet

context "math()"
snippet inf "Infimum" i
\\inf$0
endsnippet

